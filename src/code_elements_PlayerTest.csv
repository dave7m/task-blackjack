Category,Element
Identifiers,model
Identifiers,exception . InvalidMoneyAmountException
Identifiers,exception
Identifiers,InvalidMoneyAmountException
Identifiers,org . junit . jupiter . api . BeforeEach
Identifiers,org
Identifiers,junit
Identifiers,jupiter
Identifiers,api
Identifiers,BeforeEach
Identifiers,org . junit . jupiter . api . Test
Identifiers,org
Identifiers,junit
Identifiers,jupiter
Identifiers,api
Identifiers,Test
Identifiers,org . junit . jupiter . api . Assertions . assertEquals
Identifiers,org
Identifiers,junit
Identifiers,jupiter
Identifiers,api
Identifiers,Assertions
Identifiers,assertEquals
Identifiers,org . junit . jupiter . api . Assertions . assertThrows
Identifiers,org
Identifiers,junit
Identifiers,jupiter
Identifiers,api
Identifiers,Assertions
Identifiers,assertThrows
Identifiers,PlayerTest
Identifiers,Player
Identifiers,aPlayer
Identifiers,BeforeEach
Identifiers,void
Identifiers,setUp
Identifiers,aPlayer
Identifiers,Player
Identifiers,aPlayer . addCardToHand
Identifiers,aPlayer
Identifiers,addCardToHand
Identifiers,Card
Identifiers,Rank . KING
Identifiers,Rank
Identifiers,KING
Identifiers,Suit . DIAMOND
Identifiers,Suit
Identifiers,DIAMOND
Identifiers,Test
Identifiers,void
Identifiers,withdrawValidAmount
Identifiers,InvalidMoneyAmountException
Identifiers,aPlayer . withdraw
Identifiers,aPlayer
Identifiers,withdraw
Identifiers,assertEquals
Identifiers,aPlayer . balance
Identifiers,aPlayer
Identifiers,balance
Identifiers,Test
Identifiers,void
Identifiers,withdrawTooMuch
Identifiers,assertThrows
Identifiers,InvalidMoneyAmountException . class
Identifiers,InvalidMoneyAmountException
Identifiers,class
Identifiers,aPlayer . withdraw
Identifiers,aPlayer
Identifiers,withdraw
Identifiers,Test
Identifiers,void
Identifiers,withdraw0
Identifiers,assertThrows
Identifiers,InvalidMoneyAmountException . class
Identifiers,InvalidMoneyAmountException
Identifiers,class
Identifiers,aPlayer . withdraw
Identifiers,aPlayer
Identifiers,withdraw
Method Signatures,"@ BeforeEach 
     void   setUp ()   { 
         aPlayer   =   new   Player () ; 
         aPlayer . addCardToHand ( new   Card ( Rank . KING ,  Suit . DIAMOND ) ) ; 
     }"
Method Signatures,"@ Test 
     void   withdrawValidAmount ()   throws  InvalidMoneyAmountException   { 
         aPlayer . withdraw ( 40 ) ; 
         assertEquals ( 60 ,  aPlayer . balance () ) ; 
     }"
Method Signatures,"@ Test 
     void   withdrawTooMuch ()   { 
         assertThrows ( InvalidMoneyAmountException . class ,  ()  ->   aPlayer . withdraw ( 101 ) ) ; 
     }"
Method Signatures,"@ Test 
     void   withdraw0 ()   { 
         assertThrows ( InvalidMoneyAmountException . class ,  ()  ->   aPlayer . withdraw ( 0 ) ) ; 
     }"
Variable Names,model
Variable Names,exception . InvalidMoneyAmountException
Variable Names,exception
Variable Names,InvalidMoneyAmountException
Variable Names,org . junit . jupiter . api . BeforeEach
Variable Names,org
Variable Names,junit
Variable Names,jupiter
Variable Names,api
Variable Names,BeforeEach
Variable Names,org . junit . jupiter . api . Test
Variable Names,org
Variable Names,junit
Variable Names,jupiter
Variable Names,api
Variable Names,Test
Variable Names,org . junit . jupiter . api . Assertions . assertEquals
Variable Names,org
Variable Names,junit
Variable Names,jupiter
Variable Names,api
Variable Names,Assertions
Variable Names,assertEquals
Variable Names,org . junit . jupiter . api . Assertions . assertThrows
Variable Names,org
Variable Names,junit
Variable Names,jupiter
Variable Names,api
Variable Names,Assertions
Variable Names,assertThrows
Variable Names,PlayerTest
Variable Names,Player
Variable Names,aPlayer
Variable Names,BeforeEach
Variable Names,void
Variable Names,setUp
Variable Names,aPlayer
Variable Names,Player
Variable Names,aPlayer . addCardToHand
Variable Names,aPlayer
Variable Names,addCardToHand
Variable Names,Card
Variable Names,Rank . KING
Variable Names,Rank
Variable Names,KING
Variable Names,Suit . DIAMOND
Variable Names,Suit
Variable Names,DIAMOND
Variable Names,Test
Variable Names,void
Variable Names,withdrawValidAmount
Variable Names,InvalidMoneyAmountException
Variable Names,aPlayer . withdraw
Variable Names,aPlayer
Variable Names,withdraw
Variable Names,assertEquals
Variable Names,aPlayer . balance
Variable Names,aPlayer
Variable Names,balance
Variable Names,Test
Variable Names,void
Variable Names,withdrawTooMuch
Variable Names,assertThrows
Variable Names,InvalidMoneyAmountException . class
Variable Names,InvalidMoneyAmountException
Variable Names,class
Variable Names,aPlayer . withdraw
Variable Names,aPlayer
Variable Names,withdraw
Variable Names,Test
Variable Names,void
Variable Names,withdraw0
Variable Names,assertThrows
Variable Names,InvalidMoneyAmountException . class
Variable Names,InvalidMoneyAmountException
Variable Names,class
Variable Names,aPlayer . withdraw
Variable Names,aPlayer
Variable Names,withdraw
Variable Types,Player
Variable Types,void
Variable Types,void
Variable Types,void
Variable Types,void
Keywords,throws  InvalidMoneyAmountException
Arguments,"new   Card ( Rank . KING ,  Suit . DIAMOND )"
Arguments,Rank . KING
Arguments,Suit . DIAMOND
Arguments,InvalidMoneyAmountException
Arguments,40
Arguments,60
Arguments,aPlayer . balance ()
Arguments,InvalidMoneyAmountException . class
Arguments,()  ->   aPlayer . withdraw ( 101 )
Arguments,101
Arguments,InvalidMoneyAmountException . class
Arguments,()  ->   aPlayer . withdraw ( 0 )
Arguments,0
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,=
Operators,new
Operators,.
Operators,new
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
Operators,.
